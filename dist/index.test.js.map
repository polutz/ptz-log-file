{"version":3,"sources":["../dist-es6/index.test.js"],"names":["describe","it","sync","log","dirTest","date","format","fileName","join","dir","logMsg","console","hi","a","b","test","test2","obj","valueOf","toString"],"mappings":";;AAAA;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;AACAA,SAAS,cAAT,EAAyB,YAAM;AAC3BA,aAAS,SAAT,EAAoB,YAAM;AACtBC,WAAG,wBAAH,EAA6B,YAAM;AAC/B,gBAAI,sCAAJ,EACI,iBAAOC,IAAP;AACJ,gBAAMC,MAAM,qBAAQ,EAAR,CAAZ;AACA,+BAAGA,GAAH;AACA,+BAAG,sCAAH;AACH,SAND;AAOAF,WAAG,4CAAH,EAAiD,YAAM;AACnD,gBAAMG,UAAU,aAAhB;AACA,gBAAMC,OAAO,wBAASC,MAAT,4BAAb;AACA,gBAAMC,WAAW,eAAKC,IAAL,CAAUJ,OAAV,YAA2BC,IAA3B,UAAjB;AACA,gBAAI,oBAAWE,QAAX,CAAJ,EACI,iBAAOL,IAAP,CAAYE,OAAZ;AACJ,gBAAMD,MAAM,qBAAQ;AAChBM,qBAAKL;AADW,aAAR,CAAZ;AAGA,gBAAMM,SAAS,2BAAf;AACAP,gBAAIO,MAAJ;AACAC,oBAAQR,GAAR,CAAYI,QAAZ;AACA,+BAAG,oBAAWA,QAAX,CAAH,EAAyB,kBAAzB;AACH,SAbD;AAcAN,WAAG,SAAH,EAAc,YAAM;AAChB,gBAAME,MAAM,qBAAQ,EAAR,CAAZ;AACAA,gBAAI,EAAES,IAAI,KAAN,EAAaC,GAAG,CAAhB,EAAmBC,GAAG,CAAC,EAAEC,MAAM,IAAR,EAAcC,OAAO,CAArB,EAAD,EAA2B,CAA3B,EAA8B,CAA9B,CAAtB,EAAJ;AACH,SAHD;AAIAf,WAAG,4BAAH,EAAiC,YAAM;AACnC,gBAAME,MAAM,qBAAQ,EAAR,CAAZ;AACA,gBAAMc,MAAM;AACRC,yBAAS,mBAAM;AACXP,4BAAQR,GAAR,CAAY,SAAZ;AACA,2BAAO,EAAP;AACH,iBAJO;AAKRgB,0BAAU,oBAAM;AACZR,4BAAQR,GAAR,CAAY,UAAZ;AACA,2BAAO,EAAP;AACH;AARO,aAAZ;AAUAA,gBAAI,qBAAJ,EAA2Bc,GAA3B;AACH,SAbD;AAcH,KAxCD;AAyCH,CA1CD;AA2CA","file":"index.test.js","sourcesContent":["import { existsSync } from 'fs';\nimport moment from 'moment';\nimport path from 'path';\nimport { ok } from 'ptz-assert';\nimport rimraf from 'rimraf';\nimport LogFile, { dirDefault, dtFormatFileDefault } from './index';\ndescribe('ptz-log-file', () => {\n    describe('LogFile', () => {\n        it('create ./logs/ folder ', () => {\n            if (existsSync(dirDefault))\n                rimraf.sync(dirDefault);\n            const log = LogFile({});\n            ok(log);\n            ok(existsSync(dirDefault));\n        });\n        it('create ./logsTest/log-YYYY-MM-DD.txt file ', () => {\n            const dirTest = './logsTest/';\n            const date = moment().format(dtFormatFileDefault);\n            const fileName = path.join(dirTest, `/log-${date}.txt`);\n            if (existsSync(fileName))\n                rimraf.sync(dirTest);\n            const log = LogFile({\n                dir: dirTest\n            });\n            const logMsg = 'testing creating log file';\n            log(logMsg);\n            console.log(fileName);\n            ok(existsSync(fileName), 'File not created');\n        });\n        it('log obj', () => {\n            const log = LogFile({});\n            log({ hi: 'hoy', a: 3, b: [{ test: 'as', test2: 2 }, 2, 3] });\n        });\n        it('log msg and class instance', () => {\n            const log = LogFile({});\n            const obj = {\n                valueOf: () => {\n                    console.log('valueOf');\n                    return {};\n                },\n                toString: () => {\n                    console.log('toString');\n                    return {};\n                }\n            };\n            log('getAuthToken input:', obj);\n        });\n    });\n});\n//# sourceMappingURL=index.test.js.map"]}