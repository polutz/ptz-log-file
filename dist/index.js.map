{"version":3,"sources":["../dist-esnext/index.js"],"names":["dirDefault","dtFormatFileDefault","dtFormatLogDefault","LogFile","args","log","dir","dtFormatFile","dtFormatLog","_log","logArgs","date","format","fileName","join","writeFile","getFileTxt","txt","Object","prototype","toString","call","forEach","arg","JSON","stringify","String","err"],"mappings":";;;;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA,IAAMA,aAAa,SAAnB;AACA,IAAMC,sBAAsB,YAA5B;AACA,IAAMC,qBAAqB,sBAA3B;AACA,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACnBA,WAAOA,QAAQ,EAAf;AACAA,SAAKC,GAAL,GAAWD,KAAKC,GAAL,eAAX;AACAD,SAAKE,GAAL,GAAWF,KAAKE,GAAL,IAAYN,UAAvB;AACAI,SAAKG,YAAL,GAAoBH,KAAKG,YAAL,IAAqBN,mBAAzC;AACAG,SAAKI,WAAL,GAAmBJ,KAAKI,WAAL,IAAoBN,kBAAvC;AACA,QAAI,CAAC,oBAAWE,KAAKE,GAAhB,CAAL,EACI,mBAAUF,KAAKE,GAAf;AACJ,aAASG,IAAT,GAA0B;AAAA;;AAAA,0CAATC,OAAS;AAATA,mBAAS;AAAA;;AACtB,uBAAKL,GAAL,cAAYK,OAAZ;AACA,YAAMC,OAAO,wBAASC,MAAT,CAAgBR,KAAKG,YAArB,CAAb;AACA,YAAMM,WAAW,eAAKC,IAAL,CAAUV,KAAKE,GAAf,YAA4BK,IAA5B,UAAjB;AACAI,kBAAUX,KAAKC,GAAf,EAAoBQ,QAApB,EAA8BG,WAAWZ,KAAKI,WAAhB,EAA6BE,OAA7B,CAA9B;AACH;AACD,WAAOD,IAAP;AACH;AACD,SAASO,UAAT,CAAoBR,WAApB,EAAiCJ,IAAjC,EAAuC;AACnC,QAAMO,OAAO,wBAASC,MAAT,EAAb;AACA,QAAIK,4FACNN,IADM,QAAJ;AAEA,QAAIO,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BjB,IAA/B,MAAyC,gBAA7C,EACIA,KAAKkB,OAAL,CAAa,eAAO;AAChB,YAAI;AACA,gBAAI,QAAOC,GAAP,yCAAOA,GAAP,OAAe,QAAnB,EACIN,OAAOO,KAAKC,SAAL,CAAeF,GAAf,CAAP,CADJ,KAGIN,OAAOS,OAAOH,GAAP,CAAP;AACP,SALD,CAMA,OAAOI,GAAP,EAAY;AACR,6BAAQ,4BAAR,EAAsCA,GAAtC,EAA2C,OAA3C,EAAoDvB,IAApD,EAA0D,MAA1D,EAAkEmB,GAAlE;AACA,kBAAMI,GAAN;AACH;AACJ,KAXD,EADJ,KAcIV,OAAOb,IAAP;AACJa,WAAO,oFAAP;AACA,WAAOA,GAAP;AACH;AACD,SAASF,SAAT,CAAmBV,GAAnB,EAAwBQ,QAAxB,EAAkCI,GAAlC,EAAuC;AACnC,wBAAWJ,QAAX,EAAqBI,GAArB,EAA0B,UAACU,GAAD,EAAS;AAC/B,YAAIA,GAAJ,EAAS;AACLtB,gBAAI,mBAAJ,EAAyBsB,GAAzB;AACA,kBAAMA,GAAN;AACH;AACJ,KALD;AAMH;kBACcxB,O;QACNA,O,GAAAA,O;QAASF,mB,GAAAA,mB;QAAqBC,kB,GAAAA,kB;QAAoBF,U,GAAAA,U;AAC3D","file":"index.js","sourcesContent":["import { appendFile, existsSync, mkdirSync } from 'fs';\nimport moment from 'moment';\nimport path from 'path';\nimport { log as logBase } from 'ptz-log';\nconst dirDefault = './logs/';\nconst dtFormatFileDefault = 'YYYY-MM-DD';\nconst dtFormatLogDefault = 'H:mm:ss MMMM Do YYYY';\nfunction LogFile(args) {\n    args = args || {};\n    args.log = args.log || logBase;\n    args.dir = args.dir || dirDefault;\n    args.dtFormatFile = args.dtFormatFile || dtFormatFileDefault;\n    args.dtFormatLog = args.dtFormatLog || dtFormatLogDefault;\n    if (!existsSync(args.dir))\n        mkdirSync(args.dir);\n    function _log(...logArgs) {\n        args.log(...logArgs);\n        const date = moment().format(args.dtFormatFile);\n        const fileName = path.join(args.dir, `/log-${date}.txt`);\n        writeFile(args.log, fileName, getFileTxt(args.dtFormatLog, logArgs));\n    }\n    return _log;\n}\nfunction getFileTxt(dtFormatLog, args) {\n    const date = moment().format();\n    var txt = `\\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n${date} \\n`;\n    if (Object.prototype.toString.call(args) === '[object Array]')\n        args.forEach(arg => {\n            try {\n                if (typeof arg === 'object')\n                    txt += JSON.stringify(arg);\n                else\n                    txt += String(arg);\n            }\n            catch (err) {\n                logBase('Error writing to log file:', err, 'args:', args, 'arg:', arg);\n                throw err;\n            }\n        });\n    else\n        txt += args;\n    txt += '\\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< \\n';\n    return txt;\n}\nfunction writeFile(log, fileName, txt) {\n    appendFile(fileName, txt, (err) => {\n        if (err) {\n            log('Error saving Log!', err);\n            throw err;\n        }\n    });\n}\nexport default LogFile;\nexport { LogFile, dtFormatFileDefault, dtFormatLogDefault, dirDefault };\n//# sourceMappingURL=index.js.map"]}